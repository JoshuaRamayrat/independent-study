2.1 What is the purpose of system calls?

	They're intermediaries for OS services. They control files, 
	processes, and manipulate devices

2.2 What are the 5 major activities of an OS with regard to
    process management?

    	end(): end a running program
	
	load(): execute another program
	
	create_process(): create a method for one program to create
			  another program
	
	events: waiting for, acting upon, and signaling events

	starting processes

2.5 What is the purpose of the command interpreter?
    Why is it usually separate from the kernel?

    	The command interpreter allows users to enter commands
	to be performed on the OS

	The main function of the interpreter is to get and 
	execute the next user-specified command.

	The command interpreter is not part of the kernel
	because it can change to read different commands.

2.6 What system calls are executed by the shell to start
    a new process?

    	fork() 
	exec()

2.7 What is the purpose of system programs?

	They provide an environment for program development
	and execution.

2.9 List 5 services by an OS & explain their user convenience.
    Explain cases where user-level programs can't provide the services.

	program execution: system must be able to load and end a program
	
	I/O operations: for running programs because they require
			IO from files or devices. 

	file systems: programs need to read/write files and directories
		      Certain file systems impart specific performance
		      characteristics and features.

	communication: processes exchange info. implement using shared
		       memory involving read/write a shared section of 
		       memory. 
	
	resource allocation: resources include the following
				CPU cycles
				main memory
				file storage
			     	IO devices

			     resources must be allocated for multiple
			     users and multiple jobs running.

2.10 Why is the OS stored in firmware vs. disk?

	(unfinished)
	
	firmware: example -> program of an embedded system
	
