1.1 What are the 3 main purposes of an operating system
	
	(My answer)
	Manage computer hardware
	Provide environment for application programs to run
	Provide an interface for the system to the user

1.2 We have stressed the need for an OS to efficiently use hardware.
    When is it okay to 'waste' resources and why is such a system
    not really 'wasteful'?

	(My answer)
    	It's okay to use resources for the view of the User. The user
	should have access to the keyboard, mouse, system unit, and
	several applications running all at the same time. It would 
	be hard on the user to have to wait for any single process 
	to complete. This is a design for 'ease of use'. No attention
	is paid to 'resource utilization'.

1.3 What is the main difficulty that a programmer must overcome
    when developing an OS for a real-time environment?

	(My answer)
	Scheduling processes must be done correctly for 
	a real-time OS to function correctly.

1.4 There are various definitions for Operating Systems. Argue for 
    both sides of an OS (not) consisting of web browsers and mail programs.
    Support your answers
	
	(My answer)
    	This depends on your definition of an OS. If an OS is just
	the kernel, then web browsers aren't part of the OS as a kernel
	is designed to "manage a computer's hardware". The web browsers
	and mail programs are "application programs". They don't have
	to exist for the computer to work. 

	You could argue they're part of the OS as OSs provide the 
	environment for application programs to exist. As a result,
	the application program is part of the OS.

1.5 How does the distinction between kernel mode and user mode 
    function as a rudimentary form of protection (security) system?
	
	(My answer)
    	There are internal applications running that should not be
	disrupted by the user for the operating system to function
	correctly. In user mode, the available graphical interfaces
	prevent the user from accessing critical applications.

1.6 Which of the following should be 'privileged'?
	set value of a timer
	read the clock
	clear memory
	issue a trap instruction
	turn off interrupts
	modify entries in device-status table
	switch from user to kernel mode
	access i/o device

	(My answer)
	Privileged instructions are 'harmful' if they're
	modified by the user:
		set value of a timer
		clear memory
		issue a trap instruction
		turn off interrupts
		switch from user to kernel mode
		access i/o device

1.7 Early computers protected the OS by placing it in a 
    memory partition that could not be modified by either the 
    user job or the OS. Describe 2 problems for such a scheme

	(My answer)


1.9 Timers could be used to compute the current time. Provide a 
    short description of how this could be accomplished.

	(My answer)
	Initialize a counter to 60*60*24 to represent the number of seconds
	in a day. Have the timer interrupt every time 60 seconds passes
	to indicate the number of minutes passed


